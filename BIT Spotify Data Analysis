/*Creating the table*/
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

/*Quick view of data*/
SELECT * FROM BIT_DB.Spotifydata
Limit 20;

/* Top 10 Artists by Popularity */
SELECT artist_name, popularity 
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

/*Longest Song & The Artist*/
SELECT artist_name, track_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

/* AVG Danceability by artist & track */
SELECT artist_name, track_name, ROUND(danceability*100,2) AS avg_dance
FROM BIT_DB.Spotifydata
ORDER BY avg_dance DESC;


/* Dance Scores for Top 10 Songs by Popularity */
SELECT track_name, popularity, ROUND(danceability*100,2) AS avg_dance
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

/*Let's give the songs a score based on the loudness, energy, liveness, danceability, tempo and popularity and rank the top 10*/
SELECT track_name, popularity, ROUND(danceability*100,2) AS avg_dance
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

/*How many hits does each artist have & what's their avg popularity*/
SELECT artist_name, count(track_name) AS hits, ROUND(AVG(popularity),2) AS avg_pop 
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY hits DESC, avg_pop DESC;


